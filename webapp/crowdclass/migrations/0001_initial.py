# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-22 20:07
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('hint', models.CharField(blank=True, max_length=200)),
                ('answer', models.BooleanField()),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Bulge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('hint', models.CharField(blank=True, max_length=200)),
                ('answer', models.BooleanField()),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
                ('votes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Dust',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('hint', models.CharField(blank=True, max_length=200)),
                ('answer', models.BooleanField()),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('hint', models.CharField(blank=True, max_length=200)),
                ('answer', models.BooleanField()),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Elliptical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('hint', models.CharField(blank=True, max_length=200)),
                ('answer', models.BooleanField()),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Lens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('hint', models.CharField(blank=True, max_length=200)),
                ('answer', models.BooleanField()),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Merging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('hint', models.CharField(blank=True, max_length=200)),
                ('answer', models.BooleanField()),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('score', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=0)),
                ('count', models.IntegerField(default=0)),
                ('elliptical_example', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrePostTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pre_scheme', models.CharField(default='empty', max_length=200)),
                ('pre_elliptical', models.CharField(default='empty', max_length=200)),
                ('pre_mergers', models.CharField(default='empty', max_length=200)),
                ('pre_tidal', models.CharField(default='empty', max_length=200)),
                ('pre_lens', models.CharField(default='empty', max_length=200)),
                ('pre_dust', models.CharField(default='empty', max_length=200)),
                ('pre_properties', models.CharField(default='empty', max_length=200)),
                ('pre_bulges', models.CharField(default='empty', max_length=200)),
                ('pre_not', models.CharField(default='empty', max_length=200)),
                ('pre_formation', models.CharField(default='empty', max_length=200)),
                ('pre_scheme_time', models.DateTimeField(blank=True, null=True)),
                ('pre_elliptical_time', models.DateTimeField(blank=True, null=True)),
                ('pre_mergers_time', models.DateTimeField(blank=True, null=True)),
                ('pre_tidal_time', models.DateTimeField(blank=True, null=True)),
                ('pre_lens_time', models.DateTimeField(blank=True, null=True)),
                ('pre_dust_time', models.DateTimeField(blank=True, null=True)),
                ('pre_properties_time', models.DateTimeField(blank=True, null=True)),
                ('pre_bulges_time', models.DateTimeField(blank=True, null=True)),
                ('pre_not_time', models.DateTimeField(blank=True, null=True)),
                ('pre_formation_time', models.DateTimeField(blank=True, null=True)),
                ('pre_count', models.IntegerField(default=0)),
                ('post_scheme', models.CharField(default='empty', max_length=200)),
                ('post_elliptical', models.CharField(default='empty', max_length=200)),
                ('post_mergers', models.CharField(default='empty', max_length=200)),
                ('post_tidal', models.CharField(default='empty', max_length=200)),
                ('post_lens', models.CharField(default='empty', max_length=200)),
                ('post_dust', models.CharField(default='empty', max_length=200)),
                ('post_properties', models.CharField(default='empty', max_length=200)),
                ('post_bulges', models.CharField(default='empty', max_length=200)),
                ('post_not', models.CharField(default='empty', max_length=200)),
                ('post_formation', models.CharField(default='empty', max_length=200)),
                ('post_count', models.IntegerField(default=0)),
                ('post_scheme_time', models.DateTimeField(blank=True, null=True)),
                ('post_elliptical_time', models.DateTimeField(blank=True, null=True)),
                ('post_mergers_time', models.DateTimeField(blank=True, null=True)),
                ('post_tidal_time', models.DateTimeField(blank=True, null=True)),
                ('post_lens_time', models.DateTimeField(blank=True, null=True)),
                ('post_dust_time', models.DateTimeField(blank=True, null=True)),
                ('post_properties_time', models.DateTimeField(blank=True, null=True)),
                ('post_bulges_time', models.DateTimeField(blank=True, null=True)),
                ('post_not_time', models.DateTimeField(blank=True, null=True)),
                ('post_formation_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Spiral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('hint', models.CharField(blank=True, max_length=200)),
                ('answer', models.BooleanField()),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Tidal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('hint', models.CharField(blank=True, max_length=200)),
                ('answer', models.BooleanField()),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('image', models.IntegerField(blank=True, null=True)),
                ('elliptical_choice', models.CharField(blank=True, max_length=200)),
                ('elliptical_question_id', models.IntegerField(blank=True, null=True)),
                ('elliptical_time', models.DateTimeField(blank=True, null=True)),
                ('elliptical_example', models.NullBooleanField()),
                ('elliptical_description_time', models.DateTimeField(blank=True, null=True)),
                ('bulge_choice', models.CharField(blank=True, max_length=200)),
                ('bulge_question_id', models.IntegerField(blank=True, null=True)),
                ('bulge_time', models.DateTimeField(blank=True, null=True)),
                ('bulge_example', models.NullBooleanField()),
                ('bulge_description_time', models.DateTimeField(blank=True, null=True)),
                ('edge_choice', models.CharField(blank=True, max_length=200)),
                ('edge_question_id', models.IntegerField(blank=True, null=True)),
                ('edge_time', models.DateTimeField(blank=True, null=True)),
                ('edge_example', models.NullBooleanField()),
                ('edge_description_time', models.DateTimeField(blank=True, null=True)),
                ('bar_choice', models.CharField(blank=True, max_length=200)),
                ('bar_question_id', models.IntegerField(blank=True, null=True)),
                ('bar_time', models.DateTimeField(blank=True, null=True)),
                ('bar_example', models.NullBooleanField()),
                ('bar_description_time', models.DateTimeField(blank=True, null=True)),
                ('spiral_choice', models.CharField(blank=True, max_length=200)),
                ('spiral_question_id', models.IntegerField(blank=True, null=True)),
                ('spiral_time', models.DateTimeField(blank=True, null=True)),
                ('spiral_example', models.NullBooleanField()),
                ('spiral_description_time', models.DateTimeField(blank=True, null=True)),
                ('tidal_choice', models.CharField(blank=True, max_length=200)),
                ('tidal_question_id', models.IntegerField(blank=True, null=True)),
                ('tidal_time', models.DateTimeField(blank=True, null=True)),
                ('tidal_example', models.NullBooleanField()),
                ('tidal_description_time', models.DateTimeField(blank=True, null=True)),
                ('merging_choice', models.CharField(blank=True, max_length=200)),
                ('merging_question_id', models.IntegerField(blank=True, null=True)),
                ('merging_time', models.DateTimeField(blank=True, null=True)),
                ('merging_example', models.NullBooleanField()),
                ('merging_description_time', models.DateTimeField(blank=True, null=True)),
                ('dust_choice', models.CharField(blank=True, max_length=200)),
                ('dust_question_id', models.IntegerField(blank=True, null=True)),
                ('dust_time', models.DateTimeField(blank=True, null=True)),
                ('dust_example', models.NullBooleanField()),
                ('dust_description_time', models.DateTimeField(blank=True, null=True)),
                ('lens_choice', models.CharField(blank=True, max_length=200)),
                ('lens_question_id', models.IntegerField(blank=True, null=True)),
                ('lens_time', models.DateTimeField(blank=True, null=True)),
                ('lens_example', models.NullBooleanField()),
                ('lens_description_time', models.DateTimeField(blank=True, null=True)),
                ('restart', models.DateTimeField(blank=True, null=True)),
                ('restart_count', models.IntegerField(default=0)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crowdclass.Question'),
        ),
    ]
